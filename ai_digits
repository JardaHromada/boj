{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNMY1MtT3yeZdZ0Ldxg9qmy",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/JardaHromada/boj/blob/main/ai_digits\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 38,
      "metadata": {
        "id": "3tYAIp3t-J0Y"
      },
      "outputs": [],
      "source": [
        "from sklearn.datasets import load_digits\n",
        "from sklearn.naive_bayes import GaussianNB\n",
        "import matplotlib.pyplot as plt\n",
        "import sklearn.model_selection as skl"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data=load_digits()\n",
        "plt.gray()\n",
        "plt.matshow(digits.images[85])\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "t9aiSFQZ-Sfr",
        "outputId": "8ca85d02-d134-44f2-8ed4-9b576e2fc5e1"
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(1797, 64)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 0 Axes>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 480x480 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAZoAAAGkCAYAAAAIduO+AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAYeElEQVR4nO3df2zUhf3H8dfR2oNpe/yQQjtKQUURsBUpEFZdVRDTIJH9wQjBrIJbIjnGj8bE9J/Bsoxjf8zUbaQKY8XEMdiWFZwZdMCkZJGOUtIENEFQkEOEzkXu2v5xkN7n+9fuawe0/Rx998Pn+nwkn8w7Pse9YhhPP9drL+A4jiMAAIwM83oAACCzERoAgClCAwAwRWgAAKYIDQDAFKEBAJgiNAAAU4QGAGCK0AAATBEaAICpjAnN1q1bNWnSJA0fPlxz587V8ePHvZ7Up6NHj2rx4sUqLCxUIBDQ3r17vZ7UL5FIRLNnz1Zubq7y8/O1ZMkSnTlzxutZ/VJXV6eSkhLl5eUpLy9P8+bN0/79+72e5dqWLVsUCAS0fv16r6f0adOmTQoEAj2OqVOnej2rX7744gu99NJLGjNmjEaMGKHHHntMJ06c8HpWnyZNmnTTv/NAIKBwOOzJnowIzZ49e1RdXa2NGzfq5MmTKi0t1fPPP6/29navp/Wqq6tLpaWl2rp1q9dTXGlqalI4HFZzc7MOHjyoGzduaOHCherq6vJ6Wp8mTJigLVu2qLW1VSdOnNCzzz6rF198UR999JHX0/qtpaVFb7/9tkpKSrye0m/Tp0/Xl19+mTr++c9/ej2pT19//bXKy8t1zz33aP/+/fr444/1y1/+UqNGjfJ6Wp9aWlp6/Ps+ePCgJGnp0qXeDHIywJw5c5xwOJy63d3d7RQWFjqRSMTDVe5IchoaGryekZb29nZHktPU1OT1lLSMGjXK+e1vf+v1jH7p6OhwpkyZ4hw8eNCpqKhw1q1b5/WkPm3cuNEpLS31eoZrr7/+uvPkk096PWNArFu3znnwwQedZDLpyfP7/orm+vXram1t1YIFC1L3DRs2TAsWLNCxY8c8XDZ0xGIxSdLo0aM9XuJOd3e3du/era6uLs2bN8/rOf0SDoe1aNGiHn/e/eDs2bMqLCzUAw88oBUrVujixYteT+rTe++9p7KyMi1dulT5+fmaOXOmtm/f7vUs165fv653331Xq1atUiAQ8GSD70Pz1Vdfqbu7W+PGjetx/7hx43TlyhWPVg0dyWRS69evV3l5uWbMmOH1nH45deqU7rvvPgWDQb366qtqaGjQtGnTvJ7Vp927d+vkyZOKRCJeT3Fl7ty52rlzpw4cOKC6ujqdP39eTz31lDo6Orye1qvPPvtMdXV1mjJlihobG7V69WqtXbtW77zzjtfTXNm7d6+uXbuml19+2bMN2Z49MzJCOBzW6dOnffGa+3898sgjamtrUywW05///GdVVVWpqanpro5NNBrVunXrdPDgQQ0fPtzrOa5UVlam/rmkpERz585VcXGx/vjHP+qVV17xcFnvksmkysrKtHnzZknSzJkzdfr0ab311luqqqryeF3/7dixQ5WVlSosLPRsg++vaO6//35lZWXp6tWrPe6/evWqxo8f79GqoWHNmjV6//339cEHH2jChAlez+m3nJwcPfTQQ5o1a5YikYhKS0v15ptvej2rV62trWpvb9cTTzyh7OxsZWdnq6mpSb/61a+UnZ2t7u5uryf228iRI/Xwww/r3LlzXk/pVUFBwU3/8fHoo4/64mW///r888916NAh/fCHP/R0h+9Dk5OTo1mzZunw4cOp+5LJpA4fPuyb1939xnEcrVmzRg0NDfrHP/6hyZMnez3pjiSTSSUSCa9n9Gr+/Pk6deqU2traUkdZWZlWrFihtrY2ZWVleT2x3zo7O/Xpp5+qoKDA6ym9Ki8vv+lt+5988omKi4s9WuRefX298vPztWjRIk93ZMRLZ9XV1aqqqlJZWZnmzJmj2tpadXV1aeXKlV5P61VnZ2eP/6o7f/682traNHr0aE2cONHDZb0Lh8PatWuX9u3bp9zc3NTXwkKhkEaMGOHxut7V1NSosrJSEydOVEdHh3bt2qUjR46osbHR62m9ys3NvelrYPfee6/GjBlz139t7LXXXtPixYtVXFysy5cva+PGjcrKytLy5cu9ntarDRs26Dvf+Y42b96s73//+zp+/Li2bdumbdu2eT2tX5LJpOrr61VVVaXsbI//qvfkvW4Gfv3rXzsTJ050cnJynDlz5jjNzc1eT+rTBx984Ei66aiqqvJ6Wq9utVmSU19f7/W0Pq1atcopLi52cnJynLFjxzrz5893/v73v3s9Ky1+eXvzsmXLnIKCAicnJ8f59re/7Sxbtsw5d+6c17P6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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(data.data.shape)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "msDecEh6ANBK",
        "outputId": "82d57095-bb95-4d66-a6a9-f74a50ced3cc"
      },
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(1797, 64)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X = data.data\n",
        "y = data.target\n",
        "X_train, X_test, y_train, y_test = skl.train_test_split(X, y, test_size=0.50, random_state=42)"
      ],
      "metadata": {
        "id": "P30DrBAaAROH"
      },
      "execution_count": 71,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "umela_inteligence = GaussianNB()\n",
        "umela_inteligence.fit(X_train, y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 75
        },
        "id": "i-zA3eP6AXzH",
        "outputId": "bbb4a971-7f86-4a52-f852-63c605303aa9"
      },
      "execution_count": 72,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "GaussianNB()"
            ],
            "text/html": [
              "<style>#sk-container-id-7 {color: black;background-color: white;}#sk-container-id-7 pre{padding: 0;}#sk-container-id-7 div.sk-toggleable {background-color: white;}#sk-container-id-7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-7 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-7 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-7 div.sk-item {position: relative;z-index: 1;}#sk-container-id-7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-7 div.sk-item::before, #sk-container-id-7 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-7 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-7 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-7 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-7 div.sk-label-container {text-align: center;}#sk-container-id-7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-7 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-7\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GaussianNB()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" checked><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GaussianNB</label><div class=\"sk-toggleable__content\"><pre>GaussianNB()</pre></div></div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 72
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "umela_inteligence.score(X_test, y_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EzLPp5VWAZyL",
        "outputId": "d01055fa-362d-4a1a-92ed-6b414706b44f"
      },
      "execution_count": 73,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.7686318131256952"
            ]
          },
          "metadata": {},
          "execution_count": 73
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cisla = X_test[124]\n",
        "cisla\n",
        "\n",
        "data=load_digits()\n",
        "plt.gray()\n",
        "plt.matshow(digits.images[124])\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 454
        },
        "id": "8JP_SxG9AglB",
        "outputId": "ae3e27bb-0b7b-428e-9e39-6be9bafdd049"
      },
      "execution_count": 78,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 0 Axes>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 480x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "vysledek = umela_inteligence.predict([cisla])[0]\n",
        "data.target_names[vysledek]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hOYxGaELAsxn",
        "outputId": "c253d02f-4d97-4b13-ca2c-5a7ae8144cf1"
      },
      "execution_count": 79,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "5"
            ]
          },
          "metadata": {},
          "execution_count": 79
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import numpy\n",
        "from sklearn import metrics\n",
        "\n",
        "actual = numpy.random.binomial(1,.9,size = 1000)\n",
        "predicted = numpy.random.binomial(1,.9,size = 1000)\n",
        "\n",
        "confusion_matrix = metrics.confusion_matrix(actual, predicted)\n",
        "\n",
        "cm_display = metrics.ConfusionMatrixDisplay(confusion_matrix = confusion_matrix, display_labels = [False, True])\n",
        "\n",
        "cm_display.plot()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "id": "k19O07M-DVMu",
        "outputId": "a59026b9-50b8-434a-dadb-6160e6ffaf54"
      },
      "execution_count": 81,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}